class Solution:
    def longestCommonPrefix(self, strs: List[str]) -> str:
        prefix = ""
        if len(strs) == 1:
            return strs[0]
        
        min_word = strs[0]
        #find smallest word
        for i in range(len(strs)):
            if len(strs[i]) < len(min_word):
                min_word = strs[i]
        strs.remove(min_word)
        check = True  
        for i in range(len(min_word)):
            for j in range(len(strs)):
                if (min_word[i] == strs[j][i]) and check==True:
                    check = True
                else:
                    check = False
            if check == True:
                prefix = prefix + min_word[i]
            
        return prefix
        
class Solution:
    def longestCommonPrefix(self, strs: List[str]) -> str:
        ret_str = ""
        if (len(strs) == 0):
            return ret_str
        elif (len(strs) == 1):
            return strs[0]
        else:
            # find the shortest string
            min_len = len(strs[0])    
            for i in range(1, len(strs)):        
                min_len = min(min_len, len(strs[i]))
            #Go through len of shortest string
            for i in range(0,min_len): 
                #Go through words in list 
                for j in range(0, len(strs)):
                    #If words do not have the same letters at position i, return current string
                    if(strs[0][i] != strs[j][i]):
                        return ret_str 
                #Add current letter if all match
                ret_str += strs[0][i]
            return ret_str
