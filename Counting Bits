# class Solution(object):
#     def countBits(self, n):
#         """
#         :type n: int
#         :rtype: List[int]
#         """
#         count_list = [None]*(n+1)
#         for i in range(n+1):
#             num_of_ones = bin(i).count('1')
#             count_list[i] = num_of_ones
#         return count_list 
            
#dp solution
class Solution(object):
    def countBits(self, n):
        """
        :type n: int
        :rtype: List[int]
        """
        dp = [0] * (n+1) 
        offset = 1
        
        dp[0] = 0
        
        for i in range(1,n+1):
            if offset * 2 == i:
                offset = i
            dp[i] = 1 + dp[i-offset]
        return dp
        
            
