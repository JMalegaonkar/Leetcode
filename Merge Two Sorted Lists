# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeTwoLists(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:
        #check special None cases
        if l1 is None and l2 is None:
            return None
        elif l1 is None:
            return l2
        elif l2 is None:
            return l1
        # create a blank ListNode class to return linked list
        head = l3 = ListNode()
        
        while l1 and l2:
            # if value is less than val2 then l3.next become l1, else it becomes l2
            #then set the value of l1/l2 to the bext value of the list
            if (l1.val <= l2.val):
                l3.next = l1
                l1 = l1.next
            else:
                l3.next = l2
                l2 = l2.next
            l3 = l3.next
        # Attach lone number left in either linked list to the new list
        if l1: 
            l3.next = l1
        if l2: 
            l3.next = l2
            
        return(head.next)
